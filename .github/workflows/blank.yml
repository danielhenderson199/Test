name: Windows AnyDesk Setup

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: windows-latest  # must be self-hosted to allow GUI and remote access

    steps:
      - name: Install Chocolatey (if missing)
        run: |
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }

      - name: Install AnyDesk
        run: choco install anydesk -y

      - name: Set AnyDesk password
        run: |
          $RegPath = "HKLM:\SOFTWARE\AnyDesk"
          if (-not (Test-Path $RegPath)) {
            New-Item -Path $RegPath -Force | Out-Null
          }
          $Password = "DANIEL64MACOSVM"
          $PasswordBytes = [System.Text.Encoding]::UTF8.GetBytes($Password)
          Set-ItemProperty -Path $RegPath -Name "Password" -Value $PasswordBytes -Type Binary

      - name: Launch AnyDesk
        run: |
          Start-Process "C:\Program Files (x86)\AnyDesk\AnyDesk.exe"
          Start-Sleep -Seconds 5

      - name: Display AnyDesk ID (if available)
        run: |
          $confPath = "$env:APPDATA\AnyDesk\system.conf"
          if (Test-Path $confPath) {
            Get-Content $confPath | Select-String 'ad.anynet.id' | ForEach-Object { $_.ToString() }
          } else {
            Write-Host "AnyDesk ID not found yet. Try connecting manually."
          }

      - name: Keep runner alive
        run: |
          Write-Host "Setup complete. Keeping the runner alive..."
          while ($true) {
            Write-Host "Still running..."
            Start-Sleep -Seconds 60
          }
