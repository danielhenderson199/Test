name: Windows AnyDesk Setup with Chocolatey

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: windows-latest

    steps:
      - name: Install Chocolatey (if missing)
        shell: cmd
        run: |
          where choco || (
            @powershell -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command ^
              "Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))"
          )

      - name: Install AnyDesk Portable
        shell: cmd
        run: choco install anydesk.portable -y

      - name: Set AnyDesk unattended access password
        shell: powershell
        run: |
          $RegPath = 'HKLM:\SOFTWARE\AnyDesk'
          if (-not (Test-Path $RegPath)) {
            New-Item -Path $RegPath -Force | Out-Null
          }
          $Password = 'DANIEL64MACOSVM'
          $PasswordBytes = [System.Text.Encoding]::UTF8.GetBytes($Password)
          Set-ItemProperty -Path $RegPath -Name 'Password' -Value $PasswordBytes -Type Binary

      - name: Launch AnyDesk (fixed)
        shell: powershell
        run: |
          $exe = "C:\ProgramData\chocolatey\lib\anydesk.portable\tools\AnyDesk.exe"
          if (Test-Path $exe) {
            Start-Process $exe
            Start-Sleep -Seconds 10
          } else {
            Write-Error "AnyDesk executable not found"
          }

      - name: Show AnyDesk ID from config
        shell: powershell
        run: |
          $config = "$env:APPDATA\AnyDesk\system.conf"
          Start-Sleep -Seconds 10
          if (Test-Path $config) {
            $content = Get-Content $config -Raw
            if ($content -match 'ad\.id=([0-9]+)') {
              $id = $matches[1]
              Write-Host "AnyDesk ID: $id"
            } else {
              Write-Warning "AnyDesk ID not found in system.conf"
            }
          } else {
            Write-Warning "AnyDesk config not found at $config"
          }

      - name: Keep runner alive
        shell: cmd
        run: |
          :loop
          echo Still running...
          timeout /t 60 /nobreak > nul
          goto loop
